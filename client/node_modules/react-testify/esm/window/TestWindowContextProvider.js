var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { WindowContext } from "./WindowContextProvider";
function createWindowProxy(partial) {
    const handler = {
        get: function (target, prop, receiver) {
            if (partial[prop]) {
                return partial[prop];
            }
            return Reflect.get(target, prop, receiver);
        }
    };
    const proxy = new Proxy(window, handler);
    return proxy;
}
export function TestWindowContextProvider(props) {
    const { children } = props, partialWindow = __rest(props, ["children"]);
    const windowContextRef = React.useRef(createWindowProxy(partialWindow));
    return (React.createElement(WindowContext.Provider, { value: windowContextRef.current }, children));
}
