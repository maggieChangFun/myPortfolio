import * as React from 'react';
import { RouterContext } from 'next/dist/shared/lib/router-context';
function createNextRouter(partial = {}) {
    const ourRouter = {
        asPath: '/',
        route: '/',
        pathname: '/',
        basePath: '/',
        isLocaleDomain: true,
        query: {},
        back() {
            // noops
        },
        beforePopState() {
            // noops
        },
        prefetch() {
            return Promise.resolve(void 0);
        },
        push() {
            return Promise.resolve(true);
        },
        reload() {
            // noops
        },
        replace() {
            return Promise.resolve(true);
        },
        isFallback: false,
        isReady: false,
        isPreview: false,
        events: {
            on() {
                // noops
            },
            off() {
                // noops
            },
            emit() {
                //noops
            }
        }
    };
    const nextRouter = Object.assign(Object.assign({}, ourRouter), partial);
    return nextRouter;
}
export function RouterContextTestProvider(props) {
    const nextRouterRef = React.useRef(createNextRouter(props.router));
    return (React.createElement(RouterContext.Provider, { value: nextRouterRef.current }, props.children));
}
