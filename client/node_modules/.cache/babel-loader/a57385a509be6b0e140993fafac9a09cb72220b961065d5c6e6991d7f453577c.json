{"ast":null,"code":"var _jsxFileName = \"/Users/maggiechang/Desktop/portfoliopro/client/src/PortfolioContainer/Home/Header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtils\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.scurrenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.scurrenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((Screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClasses(i),\n      onClick: () => switchSreen(i, Screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, Screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this));\n  };\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return classes;\n  };\n  const switchSreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: 'smooth'\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"MAGGIE~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","jsxDEV","_jsxDEV","Header","_s","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","scurrenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","Screen","i","className","getHeaderOptionsClasses","onClick","switchSreen","children","screen_name","fileName","_jsxFileName","lineNumber","columnNumber","getHeaderOptionsClass","index","classes","length","screen","screenComponent","document","getElementById","scrollIntoView","behavior","icon","_c","$RefreshReg$"],"sources":["/Users/maggiechang/Desktop/portfoliopro/client/src/PortfolioContainer/Home/Header/Header.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtils\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './Header.css'\n\nexport default function Header(){\n    const [selectedScreen, setSelectedScreen] =useState(0)\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false)\n\n    const updateCurrentScreen = (currentScreen) =>{\n        if(!currentScreen || !currentScreen.scurrenInView) return;\n\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.scurrenInView);\n        if(screenIndex <0) return;\n    };\n\n    let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n    const getHeaderOptions = () => {\n        return TOTAL_SCREENS.map((Screen, i)=>(\n            <div \n                key={Screen.screen_name} \n                className={getHeaderOptionsClasses(i)}\n                onClick={()=> switchSreen(i,Screen)}>\n                <span>{Screen.screen_name}</span>\n            </div>\n        ))\n    }\n\n    const getHeaderOptionsClass = (index) =>{\n        let classes = \"header-option\";\n        if(index < TOTAL_SCREENS.length -1) classes += \"header-option-seperator\";\n\n        if(selectedScreen === index) classes += \"selected-header-option\";\n        return classes;\n    }\n\n    const switchSreen = (index, screen) =>{\n        let screenComponent = document.getElementById(screen.screen_name)\n        if(!screenComponent) return;\n\n        screenComponent.scrollIntoView({behavior: 'smooth'});\n        setSelectedScreen(index);\n        setShowHeaderOptions(false);\n    };\n\n    return(\n            <div className=\"header-container\" onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n                <div className=\"header-parent\">\n                    <div className=\"header-hamburger\" onClick={()=> setShowHeaderOptions(!showHeaderOptions)}>\n                        <FontAwesomeIcon className=\"header-hamburger-bars\" icon={faBars}/>\n                    </div>\n                    <div className=\"header-logo\">\n                        <span>MAGGIE~</span>\n                    </div>\n                    <div className={ showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\"}>\n                        {getHeaderOptions()}\n                    </div>\n                </div>\n            </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}